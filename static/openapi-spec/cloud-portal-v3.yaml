openapi: 3.0.0
x-stoplight:
  id: f38beb4c10b50
info:
  title: Deploy API
  version: 3.0.0
  contact:
    name: Mendix Support
    url: 'https://support.mendix.com'
    email: support@mendix.com
  termsOfService: 'https://www.mendix.com/terms-of-use/'
  description: The API to Cloud Portal
paths:
  /apps:
  '/apps/{appId}':
    patch:
      summary: ''
      operationId: patch-apps-technicalContact
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/error400_Patch_App'
        '401':
          $ref: '#/components/responses/error401'
        '403':
          $ref: '#/components/responses/error403_Patch_App'
        '404':
          $ref: '#/components/responses/error404_Patch_App'
        '500':
          $ref: '#/components/responses/error500'
      tags:
        - apps
      requestBody:
        content:
          application/json:
            schema:
              type: object
              x-examples:
                example-1:
                  technicalContact:
                    userId: jane.doe@domain.tld
              properties:
                technicalContact:
                  type: object
                  properties:
                    userId:
                      type: string
            examples:
              example-1:
                value:
                  technicalContact:
                    userId: jane.doe@domain.tld
      description: Update app
  '/apps/{appId}/environments/{environmentId}/permissions':
    parameters:
      - $ref: '#/components/parameters/appId'
      - $ref: '#/components/parameters/environmentId'
    get:
      summary: Get permissions
      tags:
        - permissions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  technicalContact:
                    $ref: '#/components/schemas/userId'
                  permissions:
                    type: array
                    items:
                      $ref: '#/components/schemas/permission'
                  pagination:
                    $ref: '#/components/schemas/pagination'
              examples:
                example-1:
                  value:
                    technicalContact: jane.doe@domain.tld
                    permissions:
                      - member:
                          userId: jane.doe@domain.tld
                        canDeployApp: true
                        canManageBackups: true
                        canViewAlerts: true
                        canAccessAPI: true
                        canViewLogs: true
                        canManagePrivileges: true
                    pagination:
                      offset: 60
                      limit: 20
                      size: 17
        '401':
          $ref: '#/components/responses/error401'
        '403':
          $ref: '#/components/responses/error403_Get_Permission'
        '404':
          $ref: '#/components/responses/error404_Get_Permission'
        '500':
          $ref: '#/components/responses/error500'
      operationId: get-environment-permissions
      description: Retrieves permissions of application team members for a environment
      parameters:
        - schema:
            type: string
          in: query
          name: userId
          description: User email address
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
    patch:
      summary: Update permissions
      operationId: update-environment-permissions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  permissions:
                    type: array
                    items:
                      $ref: '#/components/schemas/permission-patch'
              examples:
                example-1:
                  value:
                    permissions:
                      - member:
                          userId: jane.doe@domain.tld
                        canDeployApp: true
                        canManageBackups: true
                        canViewAlerts: true
                        canAccessAPI: true
                        canViewLogs: true
                        canManagePrivileges: true
        '400':
          $ref: '#/components/responses/error400_Patch_Permission'
        '401':
          $ref: '#/components/responses/error401'
        '403':
          $ref: '#/components/responses/error403_Patch_Permission'
        '404':
          $ref: '#/components/responses/error404_Patch_Permission'
        '500':
          $ref: '#/components/responses/error500'
      description: Updates one or more application team members cloud permission for a environment
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                permissions:
                  type: array
                  items:
                    $ref: '#/components/schemas/permission-patch'
            examples:
              example-1:
                value:
                  permissions:
                    - member:
                        userId: jane.doe@domain.tld
                      canDeployApp: true
                      canManageBackups: true
                      canViewAlerts: true
                      canAccessAPI: true
                      canViewLogs: true
                      canManagePrivileges: true
      tags:
        - permissions
tags:
  - name: apps
  - name: permissions
servers:
  - url: 'https://cloud.home.mendix.com/api/v3'
    description: Deploy API
components:
  requestBodies: {}
  schemas:
    app:
      description: 'An app is identified by the ID of Sprintr projects. Cloud Portal adds its own set of attributes to such a project, related to the function of Cloud Portal.'
      type: object
      title: app
      properties:
        id:
          $ref: '#/components/schemas/appId'
        name:
          type: string
          example: My fabulous app
          description: The name of the app
        hasLicenseType:
          type: string
          enum:
            - free
            - licensed
          description: The type of license. Free apps are also known as sandboxes and they are created directly from Studio (Pro).
        subdomain:
          type: string
          example: myfabulousapp
          description: The environment URL's are based on this value. It is set on app creation and cannot be changed. The value is unique in the Mendix cloud.
        technicalContactMembership:
          $ref: '#/components/schemas/membership'
      required:
        - id
        - name
        - hasLicenseType
        - subdomain
        - technicalContactMembership
    apps:
      description: A list of apps.
      type: object
      properties:
        apps:
          type: array
          description: The list of apps.
          items:
            $ref: '#/components/schemas/app'
        pagination:
          $ref: '#/components/schemas/pagination'
      required:
        - apps
        - pagination
    appId:
      type: string
      title: appId
      format: uuid
      example: c533ee0b-f7db-4e62-868b-1192d392ccec
      description: The ID of the Sprintr project. In Sprintr this is called AppID and it is a UUID format.
    error:
      description: The error object explaining what happened.
      type: object
      properties:
        error:
          type: object
          required:
            - code
            - message
          properties:
            code:
              type: integer
              minimum: 0
              description: The HTTP status code.
              example: 400
            message:
              type: string
              description: Explanation of what happened.
              example: Request validation errors
            invalid-params:
              type: array
              uniqueItems: true
              minItems: 1
              description: RFC7807 compatible list with detailed feedback.
              items:
                type: object
                properties:
                  name:
                    type: string
                    example: query-parameter
                    description: The group or type this messages is for.
                  reason:
                    type: string
                    example: Value 'lisense' is not supported
                    description: Feedback what is wrong or expected.
                required:
                  - name
                  - reason
      required:
        - error
    pagination:
      title: pagination
      type: object
      description: Pagination attributes that reflect the parameters used to get the objects in the response.
      properties:
        offset:
          type: integer
          minimum: 0
          description: The offset used to get the list of objects. It starts at 0.
          example: 60
        limit:
          type: integer
          minimum: 1
          description: The maximum amount of objects to retrieve. When not specified then the server will set use a default value (for example 20). When set larger than supported then the supported maximum is used.
          example: 20
        size:
          type: integer
          minimum: 0
          description: The amount of objects in the response.
          example: 17
      required:
        - offset
        - limit
        - size
    environment:
      description: ''
      type: object
      title: environment
      properties:
        id:
          $ref: '#/components/schemas/environmentId'
        appId:
          $ref: '#/components/schemas/appId'
        name:
          type: string
          description: The name of the environment.
          example: Test
        hasState:
          type: string
          enum:
            - stopped
            - running
            - notdeployed
          description: The state of the environment.
          example: running
        isProduction:
          type: boolean
          default: false
          description: Indicates if the environment is marked as Production.
        url:
          type: string
          format: uri
          description: The full URL to access the app running on the environment.
        dbVersion:
          type: string
          description: The database version used.
        javaVersion:
          type: string
          description: The Java version used by the runtime.
        package:
          $ref: '#/components/schemas/package'
      required:
        - id
        - appId
        - name
        - hasState
        - isProduction
        - url
    environments:
      title: environments
      type: object
      properties:
        environments:
          type: array
          items:
            $ref: '#/components/schemas/environment'
        pagination:
          $ref: '#/components/schemas/pagination'
      required:
        - environments
        - pagination
    environmentId:
      type: string
      title: environmentId
      format: uuid
      example: 22064f8f-ee55-438c-9ab2-182f2f8e5f2f
    permission:
      type: object
      x-examples: {}
      properties:
        member:
          type: object
          properties:
            userId:
              $ref: '#/components/schemas/userId'
        canDeployApp:
          type: boolean
        canManageBackups:
          type: boolean
        canViewAlerts:
          type: boolean
        canAccessAPI:
          type: boolean
        canViewLogs:
          type: boolean
        canManagePrivileges:
          type: boolean
    permission-patch:
      title: permission-patch
      x-stoplight:
        id: dyz00k411xjh7
      type: object
      properties:
        member:
          type: object
          properties:
            userId:
              $ref: '#/components/schemas/userId'
        canDeployApp:
          type: boolean
        canManageBackups:
          type: boolean
        canViewAlerts:
          type: boolean
        canAccessAPI:
          type: boolean
        canViewLogs:
          type: boolean
        canManagePrivileges:
          type: boolean
    package:
      title: package
      type: object
      properties:
        id:
          $ref: '#/components/schemas/packageId'
        appId:
          $ref: '#/components/schemas/appId'
        modelVersion:
          type: string
          example: 1.3.0.623
          description: The version of the model. This is set by the developer that created the package.
        runtimeVersion:
          type: string
          example: 9.12.0.41679
          description: The Mendix runtime version.
        createdOn:
          type: string
          format: date-time
        expiresOn:
          type: string
          format: date-time
          description: The date the package will expire when not in use. This is set only at packages that are unused.
        description:
          type: string
        fileName:
          type: string
          example: MainLine-1.3.0.623.mda
          description: The MDA file name.
        fileSize:
          type: integer
          minimum: 0
          example: 42364523
          description: The size of the MDA file in bytes.
        url:
          type: string
          format: uri
          description: Direct download URL of the MDA file. This URL is valid for a limited time.
      required:
        - id
        - appId
        - modelVersion
        - runtimeVersion
        - createdOn
        - fileName
        - fileSize
        - url
    packages:
      title: packages
      type: object
      properties:
        package:
          type: array
          items:
            $ref: '#/components/schemas/package'
        pagination:
          $ref: '#/components/schemas/pagination'
      required:
        - package
        - pagination
    packageId:
      type: string
      title: packageId
      format: uuid
      example: 3bda6b5b-f038-4c09-8697-d065446b7084
      description: The ID of the package.
    membership:
      title: membership
      type: object
      description: The membership of a Mendix user in an app.
      properties:
        userId:
          $ref: '#/components/schemas/userId'
        appId:
          $ref: '#/components/schemas/appId'
        name:
          type: string
          description: The full name of the user.
          example: Jane Doe
        hasType:
          type: string
          enum:
            - technicalcontact
            - other
          description: The role of the user in this app.
        hasStatus:
          type: string
          enum:
            - active
            - inactive
          description: The user's status in this membership. A user can have an active status in the Mendix platform but has an inactive status for an app.
      required:
        - userId
        - appId
        - name
        - hasType
        - hasStatus
    userId:
      type: string
      title: userId
      description: The ID of the user.
      example: jane.doe@domain.tld
  parameters:
    offset:
      name: offset
      in: query
      required: false
      schema:
        type: integer
        minimum: 0
      description: Used with paging and defines the offset
    limit:
      name: limit
      in: query
      required: false
      schema:
        type: integer
        minimum: 1
      description: Used with paging and defines the maximum amount of objects to return
    appId:
      name: appId
      in: path
      schema:
        format: uuid
        type: string
      description: The ID of Sprintr project or app
      required: true
    environmentId:
      name: environmentId
      in: path
      required: true
      schema:
        type: string
        format: uuid
      description: The ID of an environment
    companyId:
      name: companyId
      in: path
      required: true
      schema:
        type: string
        format: uuid
      description: The ID of a company
    hasLicenseType:
      name: hasLicenseType
      in: query
      required: false
      schema:
        type: string
        enum:
          - free
          - licensed
  responses:
    error400:
      description: |-
        The request likely contains invalid data or is missing data.

        The error response gives additional feedback.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
          examples:
            example-1:
              value:
                error:
                  code: 400
                  message: Request validation errors
                  invalid-params:
                    - name: query-parameter
                      reason: Value 'lisense' is not supported
    error400_Patch_App:
      description: |-
        The request likely contains invalid data or is missing data.

        The error response gives additional feedback.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
          examples:
            Example 1:
              value:
                error:
                  code: 400
                  message: Validation errors
                  invalid-params:
                    - name: Request body
                      reason: 'Attribute ''userId'' is required, or the provided value is not supported'
            Example 2:
              value:
                error:
                  code: 400
                  message: User <userId> not found
                  invalid-params:
                    - name: ''
                      reason: ''
            Example 3:
              value:
                error:
                  code: 400
                  message: The user <userId> is not member of an application
                  invalid-params:
                    - name: ''
                      reason: ''
    error400_Patch_Permission:
      description: |-
        The request likely contains invalid data or is missing data.

        The error response gives additional feedback.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
          examples:
            Example 1:
              value:
                error:
                  code: 400
                  message: Validation errors
                  invalid-params:
                    - name: Request body
                      reason: Invalid request body
    error401:
      description: |-
        There were no usable authentication credentials found.

        The error response gives additional feedback.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
          examples:
            example-1:
              value:
                error:
                  code: 401
                  message: Unauthorized
                  invalid-params:
                    - name: Authentication
                      reason: Missing or invalid Authorization header
    error403:
      description: |-
        Access is denied. The provided credentials are incorrect or the credentials do not have the required level of access.

        The error response gives additional feedback.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
    error403_Patch_App:
      description: |-
        Access is denied. The provided credentials are incorrect or the credentials do not have the required level of access.
        The error response gives additional feedback.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
          examples:
            Example 1:
              value:
                error:
                  code: 403
                  message: Forbidden
                  invalid-params:
                    - name: Authentication
                      reason: The token is not accepted
            Example 2:
              value:
                error:
                  code: 403
                  message: Forbidden
                  invalid-params:
                    - name: Authentication
                      reason: Account not found or inactive
            Example 3:
              value:
                error:
                  code: 403
                  message: Forbidden
                  invalid-params:
                    - name: Authentication
                      reason: The user is not the Technical Contact of the app
    error403_Get_Permission:
      description: |-
        Access is denied. The provided credentials are incorrect or the credentials do not have the required level of access.
        The error response gives additional feedback.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
          examples:
            Example 1:
              value:
                error:
                  code: 403
                  message: Forbidden
                  invalid-params:
                    - name: Authentication
                      reason: The token is not accepted
            Example 2:
              value:
                error:
                  code: 403
                  message: Forbidden
                  invalid-params:
                    - name: Authentication
                      reason: Account not found or inactive
            Example 3:
              value:
                error:
                  code: 403
                  message: Forbidden
                  invalid-params:
                    - name: Authentication
                      reason: The account is not privileged to perform this request for environment <environmentId>
    error403_Patch_Permission:
      description: |-
        Access is denied. The provided credentials are incorrect or the credentials do not have the required level of access.
        The error response gives additional feedback.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
          examples:
            Example 1:
              value:
                error:
                  code: 403
                  message: Forbidden
                  invalid-params:
                    - name: Authentication
                      reason: The token is not accepted
            Example 2:
              value:
                error:
                  code: 403
                  message: Forbidden
                  invalid-params:
                    - name: Authentication
                      reason: Account not found or inactive
            Example 3:
              value:
                error:
                  code: 403
                  message: Forbidden
                  invalid-params:
                    - name: Authentication
                      reason: The account is not privileged to perform this request for environment <environmentId>
            Example 4:
              value:
                error:
                  code: 403
                  message: Forbidden
                  invalid-params:
                    - name: Authentication
                      reason: Only technical contact can change manage permission
    error404:
      description: |-
        The requested item could not be found.

        The error response gives additional feedback.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
    error404_Patch_App:
      description: |-
        The requested item could not be found.

        The error response gives additional feedback.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
          examples:
            Example 1:
              value:
                error:
                  code: 404
                  message: Application <appId> not found
                  invalid-params:
                    - name: ''
                      reason: ''
    error404_Get_Permission:
      description: |-
        The requested item could not be found.

        The error response gives additional feedback.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
          examples:
            Example 1:
              value:
                error:
                  code: 404
                  message: Application <appId> not found
                  invalid-params:
                    - name: ''
                      reason: ''
            Example 2:
              value:
                error:
                  code: 404
                  message: Environment <environmentId> not found
                  invalid-params:
                    - name: ''
                      reason: ''
    error404_Patch_Permission:
      description: |-
        The requested item could not be found.

        The error response gives additional feedback.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
          examples:
            Example 1:
              value:
                error:
                  code: 404
                  message: Application <appId> not found
                  invalid-params:
                    - name: ''
                      reason: ''
            Example 2:
              value:
                error:
                  code: 404
                  message: Environment <environmentId> not found
                  invalid-params:
                    - name: ''
                      reason: ''
            Example 3:
              value:
                error:
                  code: 404
                  message: Permission not found for user <userId>
                  invalid-params:
                    - name: ''
                      reason: ''
    error500:
      description: Internal System Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
          examples:
            Example 1:
              value:
                error:
                  code: 500
                  message: A system error occurred
                  invalid-params:
                    - name: ''
                      reason: ''
            Example 2:
              value:
                error:
                  code: 500
                  message: Not able to authenticate the request due a technical failure
                  invalid-params:
                    - name: ''
                      reason: ''
  securitySchemes:
    MxID3 token:
      type: http
      scheme: bearer
    Personal Access Token:
      type: http
      scheme: mxtoken
      description: 'This is a special type and see this page for documentation how to request a token and how to use it: https://docs.mendix.com/developerportal/community-tools/warden'
