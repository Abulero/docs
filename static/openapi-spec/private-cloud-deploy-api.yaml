openapi: 3.0.0
x-stoplight:
  id: rfl3vwppotrd9
info:
  title: Mendix for Private Cloud Deploy API
  version: 3.0.0
  contact:
    name: Mendix Support
    url: 'https://support.mendix.com'
    email: support@mendix.com
  termsOfService: 'https://www.mendix.com/terms-of-use/'
  description: 'The API to manage clusters, namespaces, and environments for Mendix apps which are deployed to Mendix for Private Cloud.'
servers:
  - url: 'https://privatecloud.mendixcloud.com/api/v3'
    description: PROD
paths:
  '/jobs/{jobId}':
    parameters:
      - $ref: '#/components/parameters/jobId'
    get:
      summary: Get Status and Result
      tags:
        - jobs
      responses:
        '200':
          $ref: '#/components/responses/job'
        '401':
          $ref: '#/components/responses/error401'
        '403':
          $ref: '#/components/responses/error403'
        '404':
          $ref: '#/components/responses/error404'
      operationId: get-job
      description: Retrieve status of an asynchronous job which has been initiated by an API call. Each API call which successfully starts a job will return the "id" of the job which can be used in this API call.
  /clusters:
    get:
      summary: Get Manifests of Multiple Clusters
      tags:
        - clusters
      responses:
        '200':
          $ref: '#/components/responses/clustersManifests'
        '401':
          $ref: '#/components/responses/error401'
        '403':
          $ref: '#/components/responses/error403'
        '404':
          $ref: '#/components/responses/error404'
      operationId: get-clusters-manifests
      description: Retrieves all the clusters for which the user is a Cluster Manager.
    post:
      summary: Create Cluster
      operationId: create-cluster
      responses:
        '202':
          $ref: '#/components/responses/job'
        '400':
          $ref: '#/components/responses/error400'
        '401':
          $ref: '#/components/responses/error401'
        '403':
          $ref: '#/components/responses/error403'
      description: Creates a new cluster based on a manifest.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/clusterManifest'
        description: Manifest of a cluster.
      tags:
        - clusters
  '/clusters/{clusterId}':
    parameters:
      - $ref: '#/components/parameters/clusterId'
    get:
      summary: Get Cluster Manifest
      tags:
        - clusters
      responses:
        '200':
          $ref: '#/components/responses/clusterManifest'
        '401':
          $ref: '#/components/responses/error401'
        '403':
          $ref: '#/components/responses/error403'
        '404':
          $ref: '#/components/responses/error404'
      operationId: get-cluster-manifest
      description: Retrieves the manifest of a cluster.
    put:
      summary: Update Cluster
      operationId: update-cluster
      responses:
        '202':
          $ref: '#/components/responses/job'
        '400':
          $ref: '#/components/responses/error400'
        '401':
          $ref: '#/components/responses/error401'
        '403':
          $ref: '#/components/responses/error403'
        '404':
          $ref: '#/components/responses/error404'
      tags:
        - clusters
      description: Updates a specific cluster.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/clusterManifest'
        description: Manifest of a cluster.
    delete:
      summary: Delete Cluster
      operationId: delete-cluster
      responses:
        '202':
          $ref: '#/components/responses/job'
        '400':
          $ref: '#/components/responses/error400'
        '401':
          $ref: '#/components/responses/error401'
        '403':
          $ref: '#/components/responses/error403'
        '404':
          $ref: '#/components/responses/error404'
      tags:
        - clusters
      description: Deletes a specific cluster.
  '/clusters/{clusterId}/namespaces':
    parameters:
      - $ref: '#/components/parameters/clusterId'
    get:
      summary: Get Manifests of Multiple Namespaces
      tags:
        - namespaces
      responses:
        '200':
          $ref: '#/components/responses/namespacesManifests'
        '401':
          $ref: '#/components/responses/error401'
        '403':
          $ref: '#/components/responses/error403'
        '404':
          $ref: '#/components/responses/error404'
      operationId: get-namespaces-manifests
      description: Retrieves the manifests of all namespaces of a cluster.
    post:
      summary: Create Namespace
      operationId: create-namespace
      responses:
        '202':
          $ref: '#/components/responses/job'
        '400':
          $ref: '#/components/responses/error400'
        '401':
          $ref: '#/components/responses/error401'
        '403':
          $ref: '#/components/responses/error403'
      tags:
        - namespaces
      description: Creates a new namespace based on a manifest.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/namespaceManifest'
        description: Manifest of a namespace.
  '/clusters/{clusterId}/namespaces/{namespaceId}':
    parameters:
      - $ref: '#/components/parameters/clusterId'
      - $ref: '#/components/parameters/namespaceId'
    get:
      summary: Get Namespace Manifest
      tags:
        - namespaces
      responses:
        '200':
          $ref: '#/components/responses/namespaceManifest'
        '401':
          $ref: '#/components/responses/error401'
        '403':
          $ref: '#/components/responses/error403'
        '404':
          $ref: '#/components/responses/error404'
      operationId: get-namespace-manifest
      description: Retrieves the manifest of a namespace.
    delete:
      summary: Delete Namespace
      operationId: delete-namespace
      responses:
        '202':
          $ref: '#/components/responses/job'
        '400':
          $ref: '#/components/responses/error400'
        '401':
          $ref: '#/components/responses/error401'
        '403':
          $ref: '#/components/responses/error403'
        '404':
          $ref: '#/components/responses/error404'
      tags:
        - namespaces
      description: Deletes a specific namespace.
  '/apps/{appId}/environments':
    parameters:
      - $ref: '#/components/parameters/appId'
    get:
      summary: Get Manifests of Multiple Environments
      responses:
        '200':
          $ref: '#/components/responses/environmentsManifests'
        '401':
          $ref: '#/components/responses/error401'
        '403':
          $ref: '#/components/responses/error403'
        '404':
          $ref: '#/components/responses/error404'
      operationId: get-environments-manifests
      description: Retrieves the manifests of all environments of an application.
      tags:
        - environments
    post:
      summary: Create Environment
      operationId: create-environment
      responses:
        '202':
          $ref: '#/components/responses/job'
        '400':
          $ref: '#/components/responses/error400'
        '401':
          $ref: '#/components/responses/error401'
        '403':
          $ref: '#/components/responses/error403'
      description: Creates a new environment based on a manifest.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/environmentManifest'
        description: Manifest of an environment.
      tags:
        - environments
  '/apps/{appId}/environments/{environmentId}':
    parameters:
      - $ref: '#/components/parameters/appId'
      - $ref: '#/components/parameters/environmentId'
    get:
      summary: Get Environment Manifest
      responses:
        '200':
          $ref: '#/components/responses/environmentManifest'
        '401':
          $ref: '#/components/responses/error401'
        '403':
          $ref: '#/components/responses/error403'
        '404':
          $ref: '#/components/responses/error404'
      operationId: get-environment-manifest
      description: Retrieves the manifest of an environment.
      tags:
        - environments
    delete:
      summary: Delete Environment
      operationId: delete-environment
      responses:
        '202':
          $ref: '#/components/responses/job'
        '400':
          $ref: '#/components/responses/error400'
        '401':
          $ref: '#/components/responses/error401'
        '403':
          $ref: '#/components/responses/error403'
        '404':
          $ref: '#/components/responses/error404'
      description: Deletes a specific environment.
      tags:
        - environments
    put:
      summary: Update Environment
      operationId: update-environment
      responses:
        '202':
          $ref: '#/components/responses/job'
        '400':
          $ref: '#/components/responses/error400'
        '401':
          $ref: '#/components/responses/error401'
        '403':
          $ref: '#/components/responses/error403'
        '404':
          $ref: '#/components/responses/error404'
      description: Updates a specific environment based on a manifest.
      parameters:
        - schema:
            type: string
          in: header
          name: Content-Type
          description: application/json
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/environmentManifest'
          application/xml:
            schema:
              $ref: '#/components/schemas/environmentManifest'
        description: Manifest of an environment.
      tags:
        - environments
  /cli:
    get:
      summary: Get List of Available Versions of mxpc-cli
      tags:
        - cli
      responses:
        '200':
          $ref: '#/components/responses/cliVersionList'
        '401':
          $ref: '#/components/responses/error401'
        '403':
          $ref: '#/components/responses/error403'
        '404':
          $ref: '#/components/responses/error404'
      operationId: get-cli-versions
      description: Retrieves all available versions of mxpc-cli.
      parameters: []
  '/cli/{cliVersionValue}?os=&architecture=':
    parameters:
      - $ref: '#/components/parameters/cliVersionValue'
    post:
      summary: Get/Download mxpc-cli
      operationId: get-cli
      responses:
        '303':
          description: See Other
          headers:
            Content-Location:
              schema:
                type: string
              description: URL of the selected version of mxpc-cli.
            Location:
              schema:
                type: string
              description: URL of the selected version of mxpc-cli.
        '400':
          $ref: '#/components/responses/error400'
        '401':
          $ref: '#/components/responses/error401'
        '403':
          $ref: '#/components/responses/error403'
        '404':
          $ref: '#/components/responses/error404'
      description: 'If every parameter is correct, this request will redirect the user to the Mendix CDN URL of the selected version of mxpc-cli.'
      parameters:
        - $ref: '#/components/parameters/os'
        - $ref: '#/components/parameters/architecture'
      tags:
        - cli
components:
  schemas:
    appId:
      type: string
      title: appId
      format: uuid
      example: c533ee0b-f7db-4e62-868b-1192d392ccec
      description: The ID of the Mendix App. In the Developer Portal, this is shown as the App ID and it is a UUID format.
      x-examples:
        example-appid: c533ee0b-f7db-4e62-868b-1192d392ccec
    error:
      type: object
      properties:
        error:
          $ref: '#/components/schemas/error-body'
      description: The error body in an error object.
      x-examples:
        example-error:
          error:
            code: 400
            message: Request validation errors
    error-body:
      description: The body of an error object explaining what happened.
      type: object
      properties:
        code:
          type: integer
          minimum: 0
          description: The HTTP status code.
          example: 400
        message:
          type: string
          description: Explanation of what happened.
          example: Request validation errors
      x-examples:
        example-job-body:
          code: 400
          message: Request validation errors
    job:
      description: Model for jobs.
      type: object
      x-examples:
        example-job-created:
          id: db6ed4d3-8b6d-4c2b-ad2b-2a69d0f7afe0
          status: created
          details: Request to create cluster.
          error:
            code: 400
            message: Request validation errors
      properties:
        id:
          $ref: '#/components/schemas/jobId'
        status:
          type: string
          enum:
            - created
            - running
            - failed
            - finished
        details:
          type: string
          example: Request to create cluster.
        error:
          $ref: '#/components/schemas/error-body'
      required:
        - id
        - status
    jobId:
      type: string
      title: jobId
      format: uuid
      example: db6ed4d3-8b6d-4c2b-ad2b-2a69d0f7afe0
      description: Model for jobId.
      x-examples:
        example-jobid: db6ed4d3-8b6d-4c2b-ad2b-2a69d0f7afe0
    clusterId:
      type: string
      title: clusterId
      format: uuid
      example: db6ed4d3-8b6d-4c2b-ad2b-2a69d0f7afe0
      description: Model for clusterId.
      x-examples:
        example-clusterid: db6ed4d3-8b6d-4c2b-ad2b-2a69d0f7afe0
    namespaceId:
      type: string
      title: namespaceId
      format: uuid
      example: db6ed4d3-8b6d-4c2b-ad2b-2a69d0f7afe0
      description: Model for namespaceId.
      x-examples:
        example-namespaceid: db6ed4d3-8b6d-4c2b-ad2b-2a69d0f7afe0
    environmentManifest:
      type: object
      x-examples:
        example-environment-manifest:
          $ref: '#/components/examples/EnvironmentManifest'
      title: ''
      description: Model for environment manifest.
      properties:
        manifestVersion:
          type: string
          example: 1.0.0
        environment:
          type: object
          required:
            - id
            - properties
            - deployment
            - container
            - provider
            - services
          properties:
            id:
              $ref: '#/components/schemas/environmentId'
            properties:
              type: object
              required:
                - name
                - production
                - defaultStudioTarget
              properties:
                name:
                  type: string
                  example: my-environment
                production:
                  type: boolean
                defaultStudioTarget:
                  type: boolean
            deployment:
              type: object
              required:
                - appUrl
                - packageId
              properties:
                appUrl:
                  type: string
                  example: 'https://test.app.url'
                packageId:
                  $ref: '#/components/schemas/packageId'
                constants:
                  type: array
                  items:
                    $ref: '#/components/schemas/constant'
                scheduledEvents:
                  type: array
                  items:
                    $ref: '#/components/schemas/scheduledEvent'
                appLogLevels:
                  type: array
                  items:
                    $ref: '#/components/schemas/appLogLevel'
            container:
              type: object
              required:
                - instances
                - resources
              properties:
                state:
                  type: string
                  enum:
                    - Ready
                    - Processing
                    - Failed
                    - Unknown
                  example: Ready
                instances:
                  type: integer
                  maximum: 10
                  minimum: 0
                  example: 3
                resources:
                  type: object
                  required:
                    - limits
                    - requests
                  properties:
                    limits:
                      $ref: '#/components/schemas/resource'
                    requests:
                      $ref: '#/components/schemas/resource'
            network:
              type: object
              properties:
                outgoingConnectionCertificate:
                  type: array
                  items:
                    type: object
                    properties:
                      enabled:
                        type: boolean
                      password:
                        type: string
                        example: 'base64 encoded string, e.g.  dGVzdA=='
                      certificateType:
                        type: string
                        example: Client
                      key:
                        type: string
                        example: long base64 encoded .pfx file
            runtime:
              type: object
              properties:
                subscriptionSecret:
                  type: string
                  example: 'base64 encoded string, e.g. c3Vic2NyaXB0aW9uLXNlY3JldA=='
                debuggerPassword:
                  type: string
                  example: 'base64 encoded string, e.g. c3Vic2NyaXB0aW9uLXNlY3JldA=='
                mxAdminPassword:
                  type: string
                  example: 'base64 encoded string, e.g. c3Vic2NyaXB0aW9uLXNlY3JldA=='
                environmentVariables:
                  type: array
                  items:
                    $ref: '#/components/schemas/environmentVariable'
                customSettings:
                  type: array
                  items:
                    $ref: '#/components/schemas/customSetting'
            provider:
              type: object
              required:
                - clusterId
                - namespace
              properties:
                clusterId:
                  type: string
                  format: uuid
                  example: a712d8f4-a77c-4189-a211-e0ea1dfde03c
                namespace:
                  type: string
                  example: my-namespace
            annotations:
              type: array
              items:
                $ref: '#/components/schemas/annotation'
            services:
              type: array
              items:
                $ref: '#/components/schemas/service'
            runtimeMetricsConfiguration:
              type: object
              properties:
                mode:
                  type: string
                  enum:
                    - default
                    - native
                    - compatibility
                  example: native
                interval:
                  type: string
                  example: 'https://docs.mendix.com/refguide/custom-settings/#11-durationinterval-settings'
                mxAgentConfig:
                  type: string
                  example: 'https://docs.mendix.com/developerportal/deploy/private-cloud-monitor/#configuring-mxagent'
                mxAgentInstrumentationConfig:
                  type: string
                  example: 'https://docs.mendix.com/developerportal/deploy/private-cloud-monitor/#configuring-mxagent'
      required:
        - manifestVersion
        - environment
    environmentId:
      type: string
      title: environmentId
      x-stoplight:
        id: 85j35bunjwyct
      example: e9m3vf7f
      maxLength: 8
      description: Model for environmentId.
      x-examples:
        example-environmentid: e9m3vf7f
    packageId:
      type: string
      title: packageId
      x-stoplight:
        id: nslc1ped244bv
      example: schedule_events.mda
      description: Name of an MDA. When the Build API becomes available for Mendix for Private Cloud, this will be replaced with a Package UUID.
      x-examples:
        example-packageId: schedule_events.mda
    constant:
      type: object
      x-examples:
        example-constant-bool:
          name: MyFirstModule.bool
          value: 'False'
        example-constant-datetime:
          name: MyFirstModule.Constant_Name
          value: '2022-03-10T13:15:00'
        example-constant-decimal:
          name: MyFirstModule.Constant_Name
          value: '10.5'
      properties:
        name:
          type: string
          example: MyFirstModule.Constant_Name
        value:
          type: string
          example: '2022-03-10T13:15:00'
      description: Model for constants.
    scheduledEvent:
      type: object
      x-examples:
        example-scheduled-event:
          name: MyFirstModule.Scheduled_event1
          enabled: true
      properties:
        name:
          type: string
          example: MyFirstModule.Scheduled_event1
        enabled:
          type: boolean
      description: Model for scheduled events.
    appLogLevel:
      type: object
      x-examples:
        example-log-level:
          name: MY_LOG_LEVEL
          level: CRITICAL
      properties:
        name:
          type: string
          example: MY_LOG_LEVEL
        level:
          type: string
          enum:
            - CRITICAL
            - NONE
            - DEBUG
            - TRACE
            - INFO
            - ERROR
          example: DEBUG
      description: Model for app log level.
    resource:
      type: object
      x-examples:
        example-resource-limits:
          cpu: '1'
          memory: '0.512'
        example-resource-requests:
          cpu: '1'
          memory: '0.512'
      description: Model for resources (limits & requests).
      properties:
        cpu:
          type: string
          example: '1'
        memory:
          type: string
          example: '0.512'
      required:
        - cpu
        - memory
    environmentVariable:
      type: object
      x-examples:
        example-custom-env-var:
          name: custom-env-variable2
          value: custom-env-variable2-value
      properties:
        name:
          type: string
          example: custom-env-variable1
        value:
          type: string
          example: custom-env-variable1-value
      description: Model for custom environment variable.
    customSetting:
      type: object
      x-examples:
        example-custom-runtime-setting:
          name: http.client.CleanupAfterSeconds
          value: '355'
      description: Model for custom runtime setting.
      title: ''
      properties:
        name:
          type: string
          example: HashAlgorithm
        value:
          type: string
          example: BCRYPT
    annotation:
      type: object
      x-examples:
        example-pod-annotation:
          key: prometheus.io/path
          value: /metrics
          annotationType: Pod
      properties:
        key:
          type: string
          example: prometheus.io/port
        value:
          type: string
          example: '8900'
        annotationType:
          type: string
          enum:
            - Pod
            - Service
            - Ingress
          example: Pod
      description: Model for annotations.
    service:
      type: object
      x-examples:
        example-service-db:
          name: ephemeral_db
          plan: OnDemand
          config: '{type: "database"}'
        example-service-storage:
          name: minio_sp
          plan: OnDemand
          config: '{type: "storage"}'
      description: Model for services.
      properties:
        name:
          type: string
          example: ephemeral_db
        plan:
          type: string
          enum:
            - OnDemand
            - Dedicated
          example: OnDemand
        config:
          type: string
          enum:
            - '{type: \"database\"}'
            - '{type: \"storage\"}'
          example: '{type: \"database\"}'
      required:
        - name
        - plan
        - config
    clusterManifest:
      type: object
      x-examples:
        example-cluster-manifest:
          $ref: '#/components/examples/ClusterManifest'
      properties:
        manifestVersion:
          type: string
        cluster:
          type: object
          properties:
            clusterId:
              type: string
              example: 085a0e34-69ec-4c61-9c7d-5cd42554f9f2
            name:
              type: string
              example: new-cluster
            clusterType:
              $ref: '#/components/schemas/clusterType'
            description:
              type: string
              example: My test cluster.
          required:
            - clusterId
            - name
            - clusterType
      required:
        - manifestVersion
      description: Model for clusterManifest.
    clusterType:
      type: string
      title: clusterType
      x-stoplight:
        id: tspxx60zy2saz
      description: Model for accepted cluster types.
      enum:
        - os
        - k8s
        - eks
        - aks
      example: k8s
      x-examples:
        example-os: os
        example-eks: eks
        example-k8s: k8s
    namespaceManifest:
      type: object
      x-examples:
        example-namespace-manifest:
          $ref: '#/components/examples/NamespaceManifest'
      properties:
        manifestVersion:
          type: string
        namespace:
          type: object
          required:
            - namespaceId
            - name
            - installationType
            - secret
          properties:
            namespaceId:
              type: string
              format: uuid
              example: 9fab54b2-39f9-48e4-8ceb-5a7ecbba44e1
            name:
              type: string
              example: my-namespace
            installationType:
              $ref: '#/components/schemas/installationType'
            secret:
              type: string
              example: 'base64 encoded string, e.g. c3Vic2NyaXB0aW9uLXNlY3JldA=='
      required:
        - manifestVersion
        - namespace
    installationType:
      type: string
      title: installationType
      x-stoplight:
        id: qiwv35mu18sqk
      enum:
        - Connected
        - Standalone
      example: Connected
      description: Model for installationType.
      x-examples:
        example-connected: Connected
        example-standalone: Standalone
    cliVersion:
      type: object
      x-examples:
        example-cli-version:
          operatorVersion: 2.0.0
          cliVersion: 2.0.0
          availableOperatingSystems: 'windows, linux, macos'
          availableArchitectures: 'x86, arm'
      description: Model for cliVersion.
      properties:
        operatorVersion:
          type: string
        cliVersion:
          type: string
        availableOperatingSystems:
          type: string
        availableArchitectures:
          type: string
    cliVersionValue:
      type: string
      title: cliVersionValue
      x-stoplight:
        id: 0sre5k90s3th2
      pattern: '[0-9].[0-9].[0-9]'
      example: 2.0.0
      description: Model for cliVersionValue.
      x-examples:
        example-cli-version-value: 2.0.0
  parameters:
    appId:
      name: appId
      in: path
      required: true
      schema:
        type: string
        format: uuid
        example: c533ee0b-f7db-4e62-868b-1192d392ccec
      description: 'The ID of a Mendix App. In the Developer Portal, this is shown as the App ID and it is a UUID format.'
    jobId:
      name: jobId
      in: path
      required: true
      schema:
        type: string
        format: uuid
        example: 42dec69c-9bdb-4918-a979-716fbbe3b8a6
      description: The ID of a JobRequest.
    environmentId:
      name: environmentId
      in: path
      required: true
      schema:
        type: string
        maxLength: 8
        example: q8g3ns76
      description: The internal name of an environment.
    clusterId:
      name: clusterId
      in: path
      schema:
        type: string
        format: uuid
        example: 42dec69c-9bdb-4918-a979-716fbbe3b8a6
      description: The ID of a Cluster.
      required: true
    namespaceId:
      name: namespaceId
      in: path
      required: true
      schema:
        type: string
        format: uuid
        example: db6ed4d3-8b6d-4c2b-ad2b-2a69d0f7afe0
      description: The ID of a Namespace.
    cliVersionValue:
      name: cliVersionValue
      in: path
      required: true
      schema:
        type: string
        pattern: '[0-9].[0-9].[0-9]'
        example: 2.0.0
      description: A version of mxpc-cli..
    os:
      name: os
      in: query
      required: true
      schema:
        type: string
        enum:
          - windows
          - linux
          - macos
        example: windows
      description: Available operating systems.
    architecture:
      name: architecture
      in: query
      required: true
      schema:
        type: string
        enum:
          - x86
          - arm
        example: x86
      description: Available architectures.
  responses:
    error400:
      description: |-
        The request likely contains invalid data or is missing data.

        The error response gives additional feedback.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
          examples:
            example-400:
              value:
                error:
                  code: 400
                  message: Request validation errors
    error401:
      description: |-
        There were no usable authentication credentials found.

        The error response gives additional feedback.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
          examples:
            example-401:
              value:
                error:
                  code: 401
                  message: Unauthorized
                  invalid-params:
                    - name: Authentication
                      reason: Missing or invalid Authorization header
    error403:
      description: |-
        Access is denied. The provided credentials are incorrect or the credentials do not have the required level of access.

        The error response gives additional feedback.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
          examples:
            example-403:
              value:
                error:
                  code: 403
                  message: Forbidden
                  invalid-params:
                    - name: Authentication
                      reason: The token is not accepted
    error404:
      description: |-
        The requested item could not be found.

        The error response gives additional feedback.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
          examples:
            example-404:
              value:
                error:
                  code: 404
                  message: App not found
                  invalid-params:
                    - name: Validation
                      reason: App 76ef1b0f-4050-4810-a159-cb419268636c could not be found
    job:
      description: The job response returned by a get-job request. The Location header is populated once the job has completed successfully.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/job'
          examples:
            example-job-created:
              value:
                id: db6ed4d3-8b6d-4c2b-ad2b-2a69d0f7afe0
                status: created
                details: Request to create cluster.
            example-job-failed-with-code:
              value:
                id: db6ed4d3-8b6d-4c2b-ad2b-2a69d0f7afe0
                status: failed
                details: Request to create cluster.
                error:
                  code: 400
                  message: The job failed
            example-job-failed-without-code:
              value:
                id: db6ed4d3-8b6d-4c2b-ad2b-2a69d0f7afe0
                status: created
                details: Request to create cluster.
                error:
                  message: Request validation errors
            example-job-finished:
              value:
                id: db6ed4d3-8b6d-4c2b-ad2b-2a69d0f7afe0
                status: finished
                details: Request to create cluster.
      headers:
        Location:
          schema:
            type: string
          description: The URL where the result of the job can be found. This is only available after the job has been created.
    environmentManifest:
      description: The environmentManifest response returned by a get-environment-manifest request.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/environmentManifest'
          examples:
            example-environment-manifest:
              value:
                manifestVersion: 1.0.0
                environment:
                  id: e9m3vf7f
                  properties:
                    name: my-environment
                    production: true
                    defaultStudioTarget: true
                  deployment:
                    appUrl: 'https://test.app.url'
                    packageId: schedule_events.mda
                    constants:
                      - name: MyFirstModule.Constant_Name
                        value: '2022-03-10T13:15:00'
                    scheduledEvents:
                      - name: MyFirstModule.Scheduled_event1
                        enabled: true
                    appLogLevels:
                      - name: MY_LOG_LEVEL
                        level: DEBUG
                  container:
                    state: Ready
                    instances: 3
                    resources:
                      limits:
                        cpu: '1'
                        memory: '0.512'
                      requests:
                        cpu: '1'
                        memory: '0.512'
                  network:
                    outgoingConnectionCertificate:
                      - enabled: true
                        password: 'base64 encoded string, e.g.  dGVzdA=='
                        certificateType: Client
                        key: long base64 encoded .pfx file
                  runtime:
                    subscriptionSecret: 'base64 encoded string, e.g. c3Vic2NyaXB0aW9uLXNlY3JldA=='
                    debuggerPassword: 'base64 encoded string, e.g. c3Vic2NyaXB0aW9uLXNlY3JldA=='
                    mxAdminPassword: 'base64 encoded string, e.g. c3Vic2NyaXB0aW9uLXNlY3JldA=='
                    environmentVariables:
                      - name: custom-env-variable1
                        value: custom-env-variable1-value
                    customSettings:
                      - name: HashAlgorithm
                        value: BCRYPT
                  provider:
                    clusterId: a712d8f4-a77c-4189-a211-e0ea1dfde03c
                    namespace: my-namespace
                  annotations:
                    - key: prometheus.io/port
                      value: '8900'
                      annotationType: Pod
                  services:
                    - name: ephemeral_db
                      plan: OnDemand
                      config: '{type: \"database\"}'
                  runtimeMetricsConfiguration:
                    mode: native
                    interval: 'https://docs.mendix.com/refguide/custom-settings/#11-durationinterval-settings'
                    mxAgentConfig: 'https://docs.mendix.com/developerportal/deploy/private-cloud-monitor/#configuring-mxagent'
                    mxAgentInstrumentationConfig: 'https://docs.mendix.com/developerportal/deploy/private-cloud-monitor/#configuring-mxagent'
    environmentsManifests:
      description: The environmentsManifests response returned by a get-environments-manifests request.
      content:
        application/json:
          schema:
            type: object
            properties:
              environments:
                type: array
                items:
                  $ref: '#/components/schemas/environmentManifest'
          examples:
            example-environments-manifests:
              value:
                environments:
                  - manifestVersion: 1.0.0
                    environment:
                      id: e9m3vf7f
                      properties:
                        name: my-environment
                        production: true
                        defaultStudioTarget: true
                      deployment:
                        appUrl: 'http://test.app.url'
                        packageId: schedule_events.mda
                        constants:
                          - name: MyFirstModule.bool
                            value: 'False'
                          - name: MyFirstModule.Constant_DateTime_Unused
                            value: '2022-03-10T13:15:00'
                          - name: MyFirstModule.Constant_DateTime_Used
                            value: '2022-03-10T09:43:00'
                          - name: MyFirstModule.decim
                            value: '10.5'
                          - name: MyFirstModule.integ
                            value: '11'
                          - name: MyFirstModule.string
                            value: test
                        scheduledEvents:
                          - name: MyFirstModule.Scheduled_event1
                            enabled: true
                          - name: MyFirstModule.Scheduled_event2
                            enabled: false
                        appLogLevels:
                          - name: loglevel
                            level: CRITICAL
                      container:
                        state: Ready
                        instances: 5
                        resources:
                          limits:
                            cpu: '1'
                            memory: '0.512'
                          requests:
                            cpu: '0.1'
                            memory: '0.512'
                      network:
                        outgoingConnectionCertificate:
                          - enabled: true
                            password: dGVzdA==
                            certificateType: Client
                            key: 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
                      runtime:
                        subscriptionSecret: c3Vic2NyaXB0aW9uLXNlY3JldA==
                        debuggerPassword: NEtpKStwIjhiMzVVUUcodw==
                        mxAdminPassword: NEtpKStwIjhiMzVVUUcodw==
                        environmentVariables:
                          - name: custom-env-variable1
                            value: custom-env-variable1-value
                          - name: custom-env-variable2
                            value: custom-env-variable2-value
                          - name: JAVA_TOOL_OPTIONS
                            value: customJVM
                        customSettings:
                          - name: custom-runtime-setting1
                            value: custom-runtime-setting1-value
                          - name: custom-runtime-setting2
                            value: custom-runtime-setting2-value
                      provider:
                        clusterId: a712d8f4-a77c-4189-a211-e0ea1dfde03c
                        namespace: my-namespace
                      annotations:
                        - key: prometheus.io/path
                          value: /metrics
                          annotationType: Pod
                        - key: prometheus.io/port
                          value: '8900'
                          annotationType: Pod
                        - key: prometheus.io/scrape
                          value: 'true'
                          annotationType: Pod
                        - key: ingress-annotation
                          value: ingress-annotation-value
                          annotationType: Ingress
                        - key: service-annotation
                          value: service-annotation-value
                          annotationType: Service
                      services:
                        - name: ephemeral_db
                          plan: OnDemand
                          config: '{type: \"database\"}'
                        - name: minio_sp
                          plan: OnDemand
                          config: '{type: \"storage\"}'
                      runtimeMetricsConfiguration:
                        mode: native
                        interval: PT1H30M
                        mxAgentConfig: config
                        mxAgentInstrumentationConfig: config
    clusterManifest:
      description: The clusterManifest response returned by a get-cluster-manifest request.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/clusterManifest'
          examples:
            example-cluster-manifest:
              value:
                manifestVersion: 1.0.0
                cluster:
                  clusterId: 085a0e34-69ec-4c61-9c7d-5cd42554f9f2
                  name: new-cluster
                  clusterType: os
                  description: My test cluster.
    clustersManifests:
      description: The clustersManifests response returned by a get-clusters-manifests request.
      content:
        application/json:
          schema:
            type: object
            properties:
              clusters:
                type: array
                items:
                  $ref: '#/components/schemas/clusterManifest'
          examples:
            example-cluster-manifests:
              value:
                clusters:
                  - manifestVersion: string
                    cluster:
                      clusterId: 085a0e34-69ec-4c61-9c7d-5cd42554f9f2
                      name: new-cluster
                      clusterType: k8s
                      description: My test cluster.
    namespaceManifest:
      description: The namespaceManifest response returned by a get-namespace-manifest request.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/namespaceManifest'
          examples:
            example-namespace-manifest:
              value:
                manifestVersion: string
                namespace:
                  namespaceId: 9fab54b2-39f9-48e4-8ceb-5a7ecbba44e1
                  name: my-namespace
                  installationType: Connected
                  secret: 'base64 encoded string, e.g. c3Vic2NyaXB0aW9uLXNlY3JldA=='
    namespacesManifests:
      description: The namespacesManifests response returned by a get-namespaces-manifests request.
      content:
        application/json:
          schema:
            type: object
            properties:
              namespaces:
                type: array
                items:
                  $ref: '#/components/schemas/namespaceManifest'
          examples:
            example-namespaces-manifests:
              value:
                namespaces:
                  - manifestVersion: 1.0.0
                    namespace:
                      namespaceId: 9fab54b2-39f9-48e4-8ceb-5a7ecbba44e1
                      name: my-namespace
                      installationType: Connected
                      secret: 'base64 encoded string, e.g. c3Vic2NyaXB0aW9uLXNlY3JldA=='
                  - manifestVersion: 1.0.0
                    namespace:
                      namespaceId: 7dab54b2-39f9-48e4-8ceb-5a7ecbba44e1
                      name: my-namespace-2
                      installationType: Standalone
                      secret: 'base64 encoded string, e.g. c3Vic2NyaXB0aW9uLXNlY3JldA=='
    cliVersionList:
      description: The JSON response returned by a get-cli-versions request.
      content:
        application/json:
          schema:
            type: object
            properties:
              cliVersionList:
                type: array
                items:
                  $ref: '#/components/schemas/cliVersion'
          examples:
            example-cli-version-list:
              value:
                cliVersionList:
                  - operatorVersion: 2.0.0
                    cliVersion: 2.0.0
                    availableOperatingSystems: 'windows, linux, macos'
                    availableArchitectures: 'x86, arm'
                  - operatorVersion: 1.0.0
                    cliVersion: 1.0.0
                    availableOperatingSystems: 'windows, linux, macos'
                    availableArchitectures: x86
  securitySchemes:
    MxID3 token:
      type: http
      scheme: bearer
    Personal Access Token:
      type: http
      scheme: mxtoken
      description: 'Access to the Mendix Developer Portal can also use a Personal Access Token. See [Create a Personal Access Token with Warden](https://docs.mendix.com/developerportal/community-tools/warden) for documentation how to request a token and how to use it.'
  requestBodies:
    environmentManifest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/environmentManifest'
          examples:
            example-environment-manifest:
              $ref: '#/components/examples/EnvironmentManifest'
      description: Request body for environment manifest.
    clusterManifest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/clusterManifest'
          examples:
            example-cluster-manifest:
              $ref: '#/components/examples/ClusterManifest'
      description: Request body for clusterManifest.
    namespaceManifest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/namespaceManifest'
          examples:
            example-namespace-manifest:
              $ref: '#/components/examples/NamespaceManifest'
      description: Request body for namespaceManifest.
  examples:
    EnvironmentManifest:
      value:
        manifestVersion: 1.0.0
        environment:
          id: e9m3vf7f
          properties:
            name: my-environment
            production: true
            defaultStudioTarget: true
          deployment:
            appUrl: 'http://test.app.url'
            packageId: schedule_events.mda
            constants:
              - name: MyFirstModule.bool
                value: 'False'
              - name: MyFirstModule.Constant_DateTime_Unused
                value: '2022-03-10T13:15:00'
              - name: MyFirstModule.Constant_DateTime_Used
                value: '2022-03-10T09:43:00'
              - name: MyFirstModule.decim
                value: '10.5'
              - name: MyFirstModule.integ
                value: '11'
              - name: MyFirstModule.string
                value: test
            scheduledEvents:
              - name: MyFirstModule.Scheduled_event1
                enabled: true
              - name: MyFirstModule.Scheduled_event2
                enabled: false
            appLogLevels:
              - name: loglevel
                level: CRITICAL
          container:
            state: Ready
            instances: 5
            resources:
              limits:
                cpu: '1'
                memory: '0.512'
              requests:
                cpu: '0.1'
                memory: '0.512'
          network:
            outgoingConnectionCertificate:
              - enabled: true
                password: dGVzdA==
                certificateType: Client
                key: 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
          runtime:
            subscriptionSecret: c3Vic2NyaXB0aW9uLXNlY3JldA==
            debuggerPassword: NEtpKStwIjhiMzVVUUcodw==
            mxAdminPassword: NEtpKStwIjhiMzVVUUcodw==
            environmentVariables:
              - name: custom-env-variable1
                value: custom-env-variable1-value
              - name: custom-env-variable2
                value: custom-env-variable2-value
              - name: JAVA_TOOL_OPTIONS
                value: customJVM
            customSettings:
              - name: custom-runtime-setting1
                value: custom-runtime-setting1-value
              - name: custom-runtime-setting2
                value: custom-runtime-setting2-value
          provider:
            clusterId: a712d8f4-a77c-4189-a211-e0ea1dfde03c
            namespace: my-namespace
          annotations:
            - key: prometheus.io/path
              value: /metrics
              annotationType: Pod
            - key: prometheus.io/port
              value: '8900'
              annotationType: Pod
            - key: prometheus.io/scrape
              value: 'true'
              annotationType: Pod
            - key: ingress-annotation
              value: ingress-annotation-value
              annotationType: Ingress
            - key: service-annotation
              value: service-annotation-value
              annotationType: Service
          services:
            - name: ephemeral_db
              plan: OnDemand
              config: '{type: \"database\"}'
            - name: minio_sp
              plan: OnDemand
              config: '{type: \"storage\"}'
          runtimeMetricsConfiguration:
            mode: native
            interval: PT1H30M
            mxAgentConfig: config
            mxAgentInstrumentationConfig: config
    ClusterManifest:
      value:
        manifestVersion: 1.0.0
        cluster:
          clusterId: 085a0e34-69ec-4c61-9c7d-5cd42554f9f2
          name: new-cluster
          clusterType: os
          description: This cluster is for testing purposes.
    NamespaceManifest:
      value:
        manifestVersion: 1.0.0
        namespace:
          namespaceId: 9fab54b2-39f9-48e4-8ceb-5a7ecbba44e1
          name: my-namespace
          installationType: Connected
          secret: 'base64 encoded string, e.g. c3Vic2NyaXB0aW9uLXNlY3JldA=='
tags:
  - name: cli
  - name: clusters
  - name: environments
  - name: jobs
  - name: namespaces
